#!/bin/bash

mkdir -p pokemon_data
error_log="errors.log"
> "$error_log"

pokemon_list=(bulbasaur ivysaur venusaur charmander charmeleon)
base_url="https://pokeapi.co/api/v2/pokemon"
timeout=10

# Function to fetch Pokémon data
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."

    curl -s --fail "$base_url/$pokemon" > "pokemon_data/${pokemon}.json" &
    pid=$!

    # Kill curl if it exceeds timeout
    ( sleep $timeout && kill -9 $pid 2>/dev/null && echo "Timeout: $pokemon" >> "$error_log" ) &
    watchdog=$!

    wait $pid 2>/dev/null
    curl_status=$?

    kill -9 $watchdog 2>/dev/null

    if [ $curl_status -ne 0 ]; then
        echo "Failed to fetch data for $pokemon ❌" | tee -a "$error_log"
        rm -f "pokemon_data/${pokemon}.json"
    else
        echo "Saved data to pokemon_data/${pokemon}.json ✅"
    fi
}

# Launch background fetch jobs
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Use jobs to list background processes (for checker)
echo "Currently running jobs:"
jobs

# Wait for all background jobs
wait

echo "✅ All fetch operations complete."
